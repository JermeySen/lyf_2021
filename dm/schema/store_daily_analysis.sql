CREATE TABLE `dm.store_daily_analysis`(
  `id` string COMMENT '主键（门店编码+支付日期,然后再反转,如：reverse(107U20210415)）',
  `store_code` string COMMENT '门店编码',
  `store_name` string COMMENT '门店名称',
  `store_type` string COMMENT '门店类型',
  `store_status` string COMMENT '门店当日状态（正常营业/关店）',
  `close_date` string COMMENT '关店日期',
  `demolition_date` string COMMENT '拆店日期',
  `l2_company_code` string COMMENT '所属二级子公司编码',
  `l2_company_name` string COMMENT '所属二级子公司名称',
  `franchisee_code` string COMMENT '所属加盟商编码',
  `franchisee_name` string COMMENT '所属加盟商名称',
  `big_area_manager_code` string COMMENT '大区负责人工号',
  `big_area_manager_name` string COMMENT '大区负责人姓名',
  `area_manager_code` string COMMENT '区域负责人工号',
  `area_manager_name` string COMMENT '区域负责人姓名',
  `pay_date` string COMMENT '支付日期,格式：yyyymmdd',
  `sales_amt_no_discount` decimal(18,2) COMMENT '应收金额',
  `sales_amt` decimal(18,2) COMMENT '实收金额',
  `sales_amt_tgt` decimal(18,2) COMMENT '销售额目标',
  `sales_amt_subsi` decimal(18,2) COMMENT '销售额（含补贴）',
  `sales_amt_discount` decimal(18,2) COMMENT '优惠金额',
  `sales_amt_pay` decimal(18,2) COMMENT '支付金额',
  `sales_amt_refund` decimal(18,2) COMMENT '退款金额',
  `sales_cnt_refund` int COMMENT '退款订单笔数',
  `sales_cnt` int COMMENT '订单笔数(正向)',
  `passenger_flow` int COMMENT '客流（取正向订单数量+逆向订单数量，即：正逆向订单数量绝对值相加，均从POS上取数）',
  `sales_amt_no_discount_mem` decimal(18,2) COMMENT '会员应收金额',
  `sales_amt_mem` decimal(18,2) COMMENT '会员实收金额',
  `sales_amt_mem_percent_tgt` decimal(18,2) COMMENT '会员销售额占比目标',
  `sales_amt_subsi_mem` decimal(18,2) COMMENT '会员销售额含补贴',
  `sales_person_cnt_mem` int COMMENT '消费会员数（不算逆向）',
  `sales_amt_discount_mem` decimal(18,2) COMMENT '会员优惠金额',
  `sales_amt_pay_mem` decimal(18,2) COMMENT '会员支付金额',
  `sales_amt_refund_mem` decimal(18,2) COMMENT '会员退款金额',
  `sales_cnt_refund_mem` int COMMENT '会员退款订单笔数',
  `sales_cnt_mem` int COMMENT '会员订单笔数',
  `bg_open_card_cnt` int COMMENT '黑金开卡量（按门店对buyer_key去重）',
  `mem_save_amt` decimal(18,2) COMMENT '会员充值业绩额(亦是到账金额)',
  `mem_save_amt_tgt` decimal(18,2) COMMENT '会员充值业绩额目标',
  `new_mem_cnt` int COMMENT '拉新人数（单店&单人单码注册会员）',
  `new_mem_cnt_tgt` int COMMENT '拉新目标',
  `store_reg_mem_cnt` int COMMENT '门店注册会员数',
  `app_reg_mem_cnt` int COMMENT 'APP注册会员数',
  `applets_reg_mem_cnt` int COMMENT '小程序注册会员数',
  `active_dev_cnt` int COMMENT '激活设备数',
  `group_cnt` int COMMENT '社群数',
  `fans_cnt` int COMMENT '社群粉丝数',
  `fans_cnt_tgt` int COMMENT '社群粉丝数目标',
  `new_groups_cnt` int COMMENT '新增社群数',
  `new_fans_cnt` int COMMENT '新增社群粉丝数',
  `live_broadcast_cnt` int COMMENT '门店发起的直播场次（伊直播）',
  `sales_amt_area_group_buy` decimal(18,2) COMMENT '门店对应的城区总下的所有门店的团购订单业绩额',
  `sales_cnt_area_group_buy` int COMMENT '门店对应的城区总下的所有门店的团购订单笔数',
  `sales_amt_no_discount_y` decimal(18,2) COMMENT '伊点卡应收金额',
  `sales_amt_y` decimal(18,2) COMMENT '伊点卡实收金额',
  `buy_cnt_y` int COMMENT '伊点卡购买张数',
  `sales_amt_no_discount_refund_y` decimal(18,2) COMMENT '伊点卡退款应收金额',
  `sales_amt_refund_y` decimal(18,2) COMMENT '伊点卡退款实收金额',
  `sales_amt_no_discount_u` decimal(18,2) COMMENT '悠点卡应收金额',
  `sales_amt_u` decimal(18,2) COMMENT '悠点卡实收金额',
  `sales_amt_no_discount_refund_u` decimal(18,2) COMMENT '悠点卡退款应收金额',
  `sales_amt_refund_u` decimal(18,2) COMMENT '悠点卡退款实收金额',
  `saved_cnt_u` int COMMENT '悠点卡充值次数')
COMMENT '单店单天数据分析模型，基本涵盖观远报表，临时取数，接口调用'
PARTITIONED BY ( `dt` string COMMENT '按支付日期，每天一个分区，格式：yyyy-MM-dd')
